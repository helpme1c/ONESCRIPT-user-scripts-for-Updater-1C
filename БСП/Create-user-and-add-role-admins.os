#use "updater1c"

// ****************************************************************************
// Переменные модуля
// ****************************************************************************

Перем errors;		// Признак того, что при выполнении скрипта были ошибки.
Перем updater;		// Обновлятор, через который мы получаем информацию о базе,
					// а также вызываем различные функции обновлятора.
Перем connector;	// Коннектор для подключения к базе.
Перем v8;			// Само подключение к базе через коннектор.

// ****************************************************************************
// Ваш код для выполнения обновлятором
// ****************************************************************************

Процедура СоздатьПользователя(ПолноеИмя, Пароль)

	// Обязательно прочтите статью про COM-объекты
	// http://helpme1c.ru/ispolzovanie-com-obektov-v-onescript

	// создаём пользователя иб
	ПользовательИБ = v8.ПользователиИнформационнойБазы.СоздатьПользователя(); 
	ПользовательИБ.Имя = ПолучитьКраткоеИмяПользователяИБ(ПолноеИмя);
	ПользовательИБ.ПолноеИмя = ПолноеИмя;
	ПользовательИБ.Пароль = Пароль;
	ПользовательИБ.ПоказыватьВСпискеВыбора = Ложь;
	ПользовательИБ.АутентификацияОС = Ложь;
	 
	Если v8.ПользователиИнформационнойБазы.НайтиПоИмени(ПользовательИБ.Имя) = Неопределено Тогда		
	    ПользовательИБ.Записать();	
	    Сообщить("Новый пользователь создан.");
	Иначе
	    Сообщить("Пользователь с таким именем уже есть в базе!");
		// все равно назначим права пользователю
	    НазначитьПрава(ПользовательИБ.Имя, ПользовательИБ.ПолноеИмя);
	    Возврат;
	КонецЕсли;
	
	// создаём пользователя справочника
	Пользователь = v8.Справочники.Пользователи.СоздатьЭлемент();	
	Пользователь.Наименование = ПользовательИБ.ПолноеИмя;
	
	ОписаниеПользователяИБ = v8.NewObject("Структура");
	ОписаниеПользователяИБ.Вставить("Действие", "Записать");
	ОписаниеПользователяИБ.Вставить("УникальныйИдентификатор", ПользовательИБ.УникальныйИдентификатор);
	Пользователь.ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ", ОписаниеПользователяИБ);
	Пользователь.Записать();	
	
	// назначаем права пользователю иб
	НазначитьПрава(ПользовательИБ.Имя, ПользовательИБ.ПолноеИмя);

КонецПроцедуры

&НаКлиенте
Функция ПроверитьСуществованиеФайла(ПутьКФайлу)
    Файл = Новый Файл(ПутьКФайлу);
    Возврат Файл.Существует();
КонецФункции

&НаКлиенте
Процедура ПрочитатьФайлСПользователями()
	
	//Сообщить(КаталогИБ);
	Если ЗначениеЗаполнено(Объект.Путь) Тогда
    	ПутьКФайлу = Объект.Путь;
	Иначе
		ПутьКФайлу = "G:\Users2.txt"
	КонецЕсли;
	
	Если Не ПроверитьСуществованиеФайла(ПутьКФайлу) Тогда
		ПолноеИмя = "Администратор";
		Пароль = "Пароль";
		//СоздатьПользователя(ПолноеИмя, Пароль);
	Иначе
		ТекстовыйФайл = Новый ТекстовыйДокумент;
    	ТекстовыйФайл.Прочитать(ПутьКФайлу, "UTF-8");

    	// Выводим текст по строкам.
    	Для Индекс = 1 По ТекстовыйФайл.КоличествоСтрок() Цикл
	        СтрокаФайла = ТекстовыйФайл.ПолучитьСтроку(Индекс);
			Поз = Найти(СтрокаФайла,",");
			ПолноеИмя = Лев(СтрокаФайла,Поз - 1);
			Пароль = СокрЛП(Прав(СтрокаФайла,СтрДлина(СтрокаФайла) - Поз));
			//СоздатьПользователя(ПолноеИмя, Пароль);
    	КонецЦикла;
	КонецЕсли;
 
КонецПроцедуры

Функция ПолучитьКраткоеИмяПользователяИБ(Знач ПолноеИмя)
	
	Разделители = Новый Массив;
	Разделители.Добавить(" ");
	Разделители.Добавить(".");
	
	КраткоеИмя = "";
	Для Счетчик = 1 По 3 Цикл
		
		Если Счетчик <> 1 Тогда
			КраткоеИмя = КраткоеИмя + ВРег(Лев(ПолноеИмя, 1));
		КонецЕсли;
		
		ПозицияРазделителя = 0;
		Для каждого Разделитель Из Разделители Цикл
			ПозицияТекущегоРазделителя = СтрНайти(ПолноеИмя, Разделитель);
			Если ПозицияТекущегоРазделителя > 0
			   И (    ПозицияРазделителя = 0
			      ИЛИ ПозицияРазделителя > ПозицияТекущегоРазделителя ) Тогда
				ПозицияРазделителя = ПозицияТекущегоРазделителя;
			КонецЕсли;
		КонецЦикла;
		
		Если ПозицияРазделителя = 0 Тогда
			Если Счетчик = 1 Тогда
				КраткоеИмя = ПолноеИмя;
			КонецЕсли;
			Прервать;
		КонецЕсли;
		
		Если Счетчик = 1 Тогда
			КраткоеИмя = Лев(ПолноеИмя, ПозицияРазделителя - 1);
		КонецЕсли;
		
		ПолноеИмя = Прав(ПолноеИмя, СтрДлина(ПолноеИмя) - ПозицияРазделителя);
		Пока Разделители.Найти(Лев(ПолноеИмя, 1)) <> Неопределено Цикл
			ПолноеИмя = Сред(ПолноеИмя, 2);
		КонецЦикла;
	КонецЦикла;
	
	Возврат КраткоеИмя;
	
КонецФункции

Процедура НазначитьПрава(Имя, ПолноеИмя)
 
  // Добавление роли уже существующему пользователю
 
  ИмяПользователя = СокрЛп(Имя);
 
  ПользовательИБ = v8.ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
  
  Пользователь = v8.Справочники.Пользователи.НайтиПоНаименованию(ПолноеИмя);
 
  Если ПользовательИБ = Неопределено Тогда
    Сообщить("Пользователь с таким именем не найден в базе.");
  Иначе
    ПользовательИБ.Роли.Добавить(v8.Метаданные.Роли.АдминистраторСистемы);
	ПользовательИБ.Роли.Добавить(v8.Метаданные.Роли.ИнтерактивноеОткрытиеВнешнихОтчетовИОбработок);
	ПользовательИБ.Роли.Добавить(v8.Метаданные.Роли.ПолныеПрава);
    ПользовательИБ.Записать();
	
	Группа = v8.Справочники.ГруппыДоступа.Администраторы.ПолучитьОбъект();
	Нов = Группа.Пользователи.Добавить();
	Нов.Пользователь = Пользователь;
	Группа.Записать();
	
	Группа = v8.Справочники.ГруппыДоступа.НайтиПоНаименованию("Открытие внешних отчетов и обработок").ПолучитьОбъект();
	Нов = Группа.Пользователи.Добавить();
	Нов.Пользователь = Пользователь;
	Группа.Записать();
	
    Сообщить("Роль добавлена.");
  КонецЕсли;
 
КонецПроцедуры

// ****************************************************************************
// Служебные процедуры
// ****************************************************************************

Процедура ПриНачалеРаботы()

	errors = Ложь;

	updater = Новый Updater1C;

	// Если в скрипте не планируется использовать
	// подключение к базе - просто закомментируйте
	// две нижние строки.
	connector = updater.CreateConnector();
	v8 = updater.BaseConnectNew(connector);
	
КонецПроцедуры

Процедура ПриОкончанииРаботы()

	Если v8 <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(v8);
			v8 = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если connector <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(connector);
			connector = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если updater <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(updater);
			updater = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;

	Если errors Тогда
		ЗавершитьРаботу(1);
	КонецЕсли;

КонецПроцедуры

// ****************************************************************************
// Инициализация и запуск скрипта
// ****************************************************************************

ПриНачалеРаботы();

Попытка	
	ПрочитатьФайлСПользователями();
	
	updater.КодПользователяВыполнился();
Исключение
	errors = Истина;
	Сообщить("<span class='red'><b>" + ОписаниеОшибки() + "</b></span>");
КонецПопытки;

ПриОкончанииРаботы();